/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package layout;

import dialogue.database.orang.EditDataOrang;
import static layout.MainFrame.database;
import static layout.MainFrame.driver;
import static layout.MainFrame.pass;
import static layout.MainFrame.user;

import java.sql.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author GOODWARE1
 */
public class Laporan extends javax.swing.JInternalFrame {

    /**
     * Creates new form Panel
     */
    public Laporan() {
        initComponents();
        hideTitleBar();
        MainFrame.connect();
        TIncome.setModel(incomeTableModel);
        TOutcome.setModel(outcomeTableModel);
        backToStart();
        setTableLoad();
        setTotals();
    }

    private void backToStart() {
        incomeTableModel.getDataVector().removeAllElements();
        outcomeTableModel.getDataVector().removeAllElements();
        mTotalIncome = 0L;
        mTotalOutcome = 0L;
        mGrandTotal = 0L;
    }

    private void hideTitleBar() {
        setRootPaneCheckingEnabled(false);
        javax.swing.plaf.InternalFrameUI hide = this.getUI();
        ((javax.swing.plaf.basic.BasicInternalFrameUI) hide).setNorthPane(null);
    }

    private String[] mIncomeData = new String[4];
    private String[] mOutcomeData = new String[4];

    public static long mTotalIncome, mTotalOutcome, mGrandTotal;

    public static javax.swing.table.DefaultTableModel incomeTableModel = mhSupplierTableModel();
    public static javax.swing.table.DefaultTableModel outcomeTableModel = mhSupplierTableModel();

    private static javax.swing.table.DefaultTableModel mhSupplierTableModel() {

        return new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{"Nomor Nota", "Tanggal", "Nama", "Total"}
        ) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false

            };

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        panelku = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TOutcome = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        TIncome = new javax.swing.JTable();
        outcome = new javax.swing.JTextField();
        income = new javax.swing.JTextField();
        total = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(60, 63, 66));

        jDesktopPane1.setBackground(new java.awt.Color(60, 63, 66));

        panelku.setBackground(new java.awt.Color(60, 63, 66));

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(60, 63, 66));
        jTextField1.setForeground(new java.awt.Color(187, 187, 188));
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("Pemasukan");

        jTextField2.setEditable(false);
        jTextField2.setBackground(new java.awt.Color(60, 63, 66));
        jTextField2.setForeground(new java.awt.Color(187, 187, 188));
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField2.setText("Pengeluaran");

        TOutcome.setBackground(new java.awt.Color(60, 63, 66));
        TOutcome.setForeground(new java.awt.Color(187, 187, 188));
        TOutcome.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(TOutcome);

        TIncome.setBackground(new java.awt.Color(60, 63, 66));
        TIncome.setForeground(new java.awt.Color(187, 187, 188));
        TIncome.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TIncome.setGridColor(new java.awt.Color(44, 44, 45));
        TIncome.setSelectionBackground(new java.awt.Color(75, 110, 176));
        TIncome.setSelectionForeground(new java.awt.Color(187, 187, 188));
        jScrollPane3.setViewportView(TIncome);

        outcome.setEditable(false);
        outcome.setBackground(new java.awt.Color(69, 73, 75));
        outcome.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        outcome.setForeground(new java.awt.Color(187, 187, 188));
        outcome.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        income.setEditable(false);
        income.setBackground(new java.awt.Color(69, 73, 75));
        income.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        income.setForeground(new java.awt.Color(187, 187, 188));

        total.setEditable(false);
        total.setBackground(new java.awt.Color(69, 73, 75));
        total.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        total.setForeground(new java.awt.Color(187, 187, 188));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(187, 187, 188));
        jLabel1.setText("Total Pengeluaran");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(187, 187, 188));
        jLabel2.setText("Total Pemasukan");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(187, 187, 188));
        jLabel3.setText("GRAND TOTAL");

        javax.swing.GroupLayout panelkuLayout = new javax.swing.GroupLayout(panelku);
        panelku.setLayout(panelkuLayout);
        panelkuLayout.setHorizontalGroup(
            panelkuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelkuLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(110, 110, 110))
            .addGroup(panelkuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelkuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelkuLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(38, 38, 38)
                        .addComponent(income))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(panelkuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelkuLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(outcome, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelkuLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(total)
                .addGap(126, 126, 126))
        );
        panelkuLayout.setVerticalGroup(
            panelkuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelkuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelkuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(panelkuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(78, 78, 78)
                .addGroup(panelkuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outcome, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(income, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(panelkuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelkuLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(86, 86, 86))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelkuLayout.createSequentialGroup()
                        .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))))
        );

        jDesktopPane1.setLayer(panelku, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1052, Short.MAX_VALUE)
            .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jDesktopPane1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(panelku, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 519, Short.MAX_VALUE)
            .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jDesktopPane1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(panelku, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setTableLoad() {
        try {

            DateFormat df
                    = new SimpleDateFormat("dd MMMM yyyy", new Locale("in", "ID"));

            DateFormat sqlDateFormat
                    = new SimpleDateFormat("yyyy-MM-dd");

            Class.forName(driver);
            Connection kon = DriverManager.getConnection(database, user, pass);

            Statement stt1 = kon.createStatement();
            String SQL1 = "SELECT DISTINCT nomor_nota, tanggal, nama_pbl  FROM penjualan JOIN pembeli  "
                    + "WHERE penjualan.kd_pbl = pembeli.kd_pbl  "
                    + "ORDER BY nomor_nota ASC "
                    + ";";
            ResultSet res1 = stt1.executeQuery(SQL1);

            while (res1.next()) {

                mIncomeData[0] = res1.getString(1);
                mIncomeData[1] = df.format(sqlDateFormat.parse(res1.getString(2)));
                mIncomeData[2] = res1.getString(3);

                Statement sttTotalNya = kon.createStatement();
                String sqlTotalNya = "SELECT SUM(sub_total) FROM penjualan WHERE nomor_nota = " + mIncomeData[0] + " ;";
                ResultSet resTotalNYa = sttTotalNya.executeQuery(sqlTotalNya);

                while (resTotalNYa.next()) {

                    mIncomeData[3] = MainFrame.formatter(resTotalNYa.getString(1));

                }

                resTotalNYa.close();
                sttTotalNya.close();
                incomeTableModel.addRow(mIncomeData);

            }

            res1.close();
            stt1.close();

            Statement stt = kon.createStatement();
            String SQL = "SELECT DISTINCT nomor_nota, tanggal, nama_dis FROM pembelian JOIN distributor "
                    + "WHERE pembelian.kd_dis = distributor.kd_dis "
                    + "ORDER BY nomor_nota ASC ;";

            ResultSet res = stt.executeQuery(SQL);

            while (res.next()) {
                mOutcomeData[0] = res.getString(1);
                mOutcomeData[1] = df.format(sqlDateFormat.parse(res.getString(2)));
                mOutcomeData[2] = res.getString(3);

                Statement sttTotal = kon.createStatement();
                String SQLTotal = "SELECT SUM(sub_total) FROM pembelian WHERE nomor_nota = " + mOutcomeData[0] + " ;";
                ResultSet resTotal = sttTotal.executeQuery(SQLTotal);

                while (resTotal.next()) {

                    mOutcomeData[3] = MainFrame.formatter(resTotal.getString(1));

                }

                resTotal.close();
                sttTotal.close();
                outcomeTableModel.addRow(mOutcomeData);

            }
            res.close();
            stt.close();
            kon.close();

        } catch (Exception ex) {
            System.err.println(ex.getMessage());
            JOptionPane.showMessageDialog(null, ex.getMessage(), "error", JOptionPane.INFORMATION_MESSAGE);
            System.exit(0);
        }

    }

    private void setTotals() {

        for (int i = 0; i < TIncome.getRowCount(); i++) {
            mTotalIncome += Long.parseLong(EditDataOrang.takeNominal(incomeTableModel.getValueAt(i, 3) + ""));
        }

        for (int j = 0; j < TOutcome.getRowCount(); j++) {
            mTotalOutcome += Long.parseLong(EditDataOrang.takeNominal(outcomeTableModel.getValueAt(j, 3) + ""));
        }

        income.setText(MainFrame.formatter(mTotalIncome + ""));
        outcome.setText(MainFrame.formatter(mTotalOutcome + ""));

        mGrandTotal = mTotalIncome - mTotalOutcome;
        total.setText("  GRAND TOTAL : " + MainFrame.formatter("" + mGrandTotal));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TIncome;
    private javax.swing.JTable TOutcome;
    public static javax.swing.JTextField income;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    public static javax.swing.JTextField outcome;
    private javax.swing.JPanel panelku;
    public static javax.swing.JTextField total;
    // End of variables declaration//GEN-END:variables
}

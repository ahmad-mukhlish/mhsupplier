/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;

/**
 *
 * @author GOODWARE1
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        dateAndTime();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Date = new javax.swing.JLabel();
        Clock = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Date.setText("Kamis, 28 September 2020");

        Clock.setText("00:00:00");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(472, Short.MAX_VALUE)
                .addComponent(Date)
                .addGap(18, 18, 18)
                .addComponent(Clock)
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Date)
                    .addComponent(Clock))
                .addContainerGap(294, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainFrame().setVisible(true);
            }
        });

    }

    private void dateAndTime() {
        DateFormat df
                = new SimpleDateFormat("EEEE, dd MMMM yyyy", new Locale("in", "ID"));

        ActionListener tickTock = (ActionEvent evt) -> {

            Calendar today = Calendar.getInstance();

            String zeroHour = "";
            String zeroMinute = "";
            String zeroSecond = "";

            int hour = today.get(Calendar.HOUR);
            int minute = today.get(Calendar.MINUTE);
            int second = today.get(Calendar.SECOND);

            if (hour <= 9) {
                zeroHour = "0";
            }

            if (minute <= 9) {
                zeroMinute = "0";
            }

            if (second <= 9) {
                zeroSecond = "0";
            }

            Clock.setText(zeroHour + hour + ":" + zeroMinute + minute + ":" + zeroSecond + second);
            Date.setText(df.format(today.getTime()));

        };

        new javax.swing.Timer(1000, tickTock).start();

    }

    public void getJam() {
        ActionListener taskPerformer = (ActionEvent evt) -> {
            Locale id = new Locale("in", "ID");
            SimpleDateFormat tgl = new SimpleDateFormat("EEEE-dd-MMM-yyyy", id);
            String nol_jam = "";
            String nol_menit = "";
            String nol_detik = "";
            Date dt = new Date();
            int nilai_jam = dt.getHours();
            int nilai_menit = dt.getMinutes();
            int nilai_detik = dt.getSeconds();
            if (nilai_jam <= 9) {
                nol_jam = "0";
            }
            if (nilai_menit <= 9) {
                nol_menit = "0";
            }
            if (nilai_detik <= 9) {
                nol_detik = "0";
            }
//            String jam = nol_jam + Integer.toString(nilai_jam);
//            String menit = nol_menit + Integer.toString(nilai_menit);
//            String detik = nol_detik + Integer.toString(nilai_detik);
            Clock.setText("  " + nilai_jam + " : " + nilai_menit + " : " + nilai_detik + "  ");
            Date.setText(tgl.format(dt));
        };
        new javax.swing.Timer(1000, taskPerformer).start();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Clock;
    private javax.swing.JLabel Date;
    // End of variables declaration//GEN-END:variables
}
